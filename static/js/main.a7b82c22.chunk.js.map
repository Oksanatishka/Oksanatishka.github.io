{"version":3,"sources":["Table-props.js","List.js","Table-state.js","Form.js","App.js","index.js"],"names":["TableHeader","react_default","a","createElement","TableBody","props","rows","characterData","map","row","index","key","name","job","TableProps","this","Table_props_TableHeader","Table_props_TableBody","Component","ListItem","label","List","listData","currentElem","List_ListItem","onClick","removeCharacter","TableState","_this$props","Table_state_TableHeader","Table_state_TableBody","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","submitForm","preventDefault","handleSubmit","state","initialState","_this$state","onSubmit","type","onChange","header4Style","color","App","charactersStateMethod","filter","character","i","concat","toConsumableArray","className","style","Table_props","src_List","Table_state","src_Form","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a7b82c22.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// Class Component\n// class Table extends Component {\n//     render() {\n//         return (\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>Name</th>\n//                         <th>Job</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     <tr>\n//                         <td>Charlie</td>\n//                         <td>Janitor</td>\n//                     </tr>\n//                     <tr>\n//                         <td>Mac</td>\n//                         <td>Bouncer</td>\n//                     </tr>\n//                     <tr>\n//                         <td>Dee</td>\n//                         <td>Aspiring actress</td>\n//                     </tr>\n//                     <tr>\n//                         <td>Dennis</td>\n//                         <td>Bartender</td>\n//                     </tr>\n//                 </tbody>\n//             </table>\n//         );\n//     }\n// }\n\n// Simple Component\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n            </tr>\n        </thead>\n    );\n};\n// const TableBody = () => {\n//     return (\n// comment hard-coded data to handle data with props\n\n// <tbody>\n//     <tr>\n//         <td>Charlie</td>\n//         <td>Janitor</td>\n//     </tr>\n//     <tr>\n//         <td>Mac</td>\n//         <td>Bouncer</td>\n//     </tr>\n//     <tr>\n//         <td>Dee</td>\n//         <td>Aspiring actress</td>\n//     </tr>\n//     <tr>\n//         <td>Dennis</td>\n//         <td>Bartender</td>\n//     </tr>\n// </tbody>\n\n//         <tbody />\n//     );\n// };\n\n// handling data with props\nconst TableBody = props => {\n    const rows = props.characterData.map((row, index) => {\n        // превратить каждый обьект в html\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n            </tr>\n        );\n    });\n    return <tbody>{rows}</tbody>;\n};\n\nclass TableProps extends Component {\n    render() {\n        // получить доступ к property под названием characterData из parent\n        const { characterData } = this.props;\n\n        return (\n            <table>\n                <TableHeader />\n                {/* передать property child-y */}\n                <TableBody characterData={characterData} />\n            </table>\n        );\n    }\n}\n\nexport default TableProps;\n","import React, { Component } from 'react';\n\nconst ListItem = props => {\n    return <li>{props.label}</li>;\n};\n\nclass List extends Component {\n    render() {\n        const { listData } = this.props;\n        return (\n            <ul>\n                {/* <li>Item 1</li>\n                <li>Item 2</li>\n                <li>Item 3</li> */}\n                {listData.map(currentElem => {\n                    // return <li>{currentElem}</li>;\n                    return <ListItem label={currentElem} />;\n                })}\n            </ul>\n        );\n    }\n}\n\nexport default List;\n","import React, { Component } from 'react';\n\n// Class Component\n// class Table extends Component {\n//     render() {\n//         return (\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>Name</th>\n//                         <th>Job</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     <tr>\n//                         <td>Charlie</td>\n//                         <td>Janitor</td>\n//                     </tr>\n//                     <tr>\n//                         <td>Mac</td>\n//                         <td>Bouncer</td>\n//                     </tr>\n//                     <tr>\n//                         <td>Dee</td>\n//                         <td>Aspiring actress</td>\n//                     </tr>\n//                     <tr>\n//                         <td>Dennis</td>\n//                         <td>Bartender</td>\n//                     </tr>\n//                 </tbody>\n//             </table>\n//         );\n//     }\n// }\n\n// Simple Component\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n            </tr>\n        </thead>\n    );\n};\n// const TableBody = () => {\n//     return (\n// comment hard-coded data to handle data with props\n\n// <tbody>\n//     <tr>\n//         <td>Charlie</td>\n//         <td>Janitor</td>\n//     </tr>\n//     <tr>\n//         <td>Mac</td>\n//         <td>Bouncer</td>\n//     </tr>\n//     <tr>\n//         <td>Dee</td>\n//         <td>Aspiring actress</td>\n//     </tr>\n//     <tr>\n//         <td>Dennis</td>\n//         <td>Bartender</td>\n//     </tr>\n// </tbody>\n\n//         <tbody />\n//     );\n// };\n\n// handling data with props\nconst TableBody = props => {\n    const rows = props.characterData.map((row, index) => {\n        // превратить каждый обьект в html\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        );\n    });\n    return <tbody>{rows}</tbody>;\n};\n\nclass TableState extends Component {\n    render() {\n        // получить доступ к property под названием characterData из parent\n        // const { characterData } = this.props;\n        const { characterData, removeCharacter } = this.props;\n        return (\n            <table>\n                <TableHeader />\n                {/* передать property child-y */}\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n            </table>\n        );\n    }\n}\n\nexport default TableState;\n","import React, { Component } from 'react';\n\nclass Form extends Component {\n    // We'll need the constructor() to use this, and to receive the props of the parent.\n    constructor(props) {\n        super(props);\n\n        this.initialState = {\n            name: '',\n            job: ''\n        };\n\n        this.state = this.initialState;\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value\n        });\n    };\n\n    submitForm = event => {\n        event.preventDefault();\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    };\n\n    render() {\n        const { name, job } = this.state;\n        return (\n            <form onSubmit={this.submitForm}>\n                <label>Name</label>\n                <input type=\"text\" name=\"name\" value={name} onChange={this.handleChange} />\n                <label>Job</label>\n                <input type=\"text\" name=\"job\" value={job} onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport TableProps from './Table-props';\nimport List from './List';\nimport TableState from './Table-state';\nimport Form from './Form';\n\nconst header4Style = {\n    color: 'red'\n};\nclass App extends Component {\n    // handling data with state\n    // comment objects in arr below - if you Submit Form Data\n    state = {\n        charactersStateMethod: [\n            // {\n            //     name: 'Charlie',\n            //     job: 'Janitor'\n            // },\n            // {\n            //     name: 'Mac',\n            //     job: 'Bouncer'\n            // },\n            // {\n            //     name: 'Dee',\n            //     job: 'Aspring actress'\n            // },\n            // {\n            //     name: 'Dennis',\n            //     job: 'Bartender'\n            // }\n        ]\n    };\n\n    removeCharacter = index => {\n        const { charactersStateMethod } = this.state;\n\n        this.setState({\n            charactersStateMethod: charactersStateMethod.filter((character, i) => {\n                return i !== index;\n            })\n        });\n    };\n\n    handleSubmit = character => {\n        this.setState({ charactersStateMethod: [...this.state.charactersStateMethod, character] });\n    };\n\n    render() {\n        // handling data with props\n        const characters = [\n            {\n                name: 'Charlie',\n                job: 'Janitor'\n            },\n            {\n                name: 'Mac',\n                job: 'Bouncer'\n            },\n            {\n                name: 'Dee',\n                job: 'Aspring actress'\n            },\n            {\n                name: 'Dennis',\n                job: 'Bartender'\n            }\n        ];\n\n        const listItems = ['Item 1', 'Item 2', 'Item 3'];\n\n        // (continue) handling data with state\n        const { charactersStateMethod } = this.state;\n\n        return (\n            <div className=\"container\">\n                <h1>Hello Oksana</h1>\n                <h4 style={header4Style}>>> handling data with props</h4>\n                {/* передаются properties компоненту Table */}\n                <TableProps characterData={characters} />\n                <List listData={listItems} />\n                <h4 style={header4Style}>>> handling data with state</h4>\n                <TableState\n                    characterData={charactersStateMethod}\n                    removeCharacter={this.removeCharacter}\n                />\n\n                <h4 style={header4Style}>>> Submitting Form Data</h4>\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; // uncomment this or the next row\n// import App from './Api';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}